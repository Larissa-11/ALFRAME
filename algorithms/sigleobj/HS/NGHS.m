function [best_fvalue,best_solution,run_series,run_info,user_set] = NGHS(func_name , algo_config,func_config,user_config)
    getrand = @(l, r) l + (r - l) .* rand();%%ï¿½Ú¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½È?
    mytime = cputime;
    %% *****************==- ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½ï¿½Ôºï¿½ï¿½ï¿½ -==**********************
    if exist('func_config','var')
        objfunc = feval(func_name,func_config);  % Êµï¿½ï¿½Ò»ï¿½ï¿½Ä¿ï¿½êº¯ï¿½ï¿½ï¿½ï¿½
    else
        objfunc = feval(func_name);  % Êµï¿½ï¿½Ò»ï¿½ï¿½Ä¿ï¿½êº¯ï¿½ï¿½ï¿½ï¿½
        func_config = [];
    end
    objfunc = feval(func_name,func_config);
    N = objfunc.Xdim;   %%ï¿½ï¿½ï¿½ï¿½ï¿½Î¬ï¿½ï¿?
    Xmin =  objfunc.Xmin(1);
    Xmax = objfunc.Xmax(1);
    
    %% *****************==- ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ã·¨ï¿½ï¿½ï¿½ï¿½ -==**********************
    if ~exist('algo_config','var')
        algo_config = [];  % ï¿½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿?
    end
    % ï¿½ï¿½Èºï¿½ï¿½Ä£
    if isfield(algo_config,'PopuSize')
        HMS = algo_config.PopuSize;
    else
        HMS = 5;
    end
    % ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    if isfield(algo_config,'maxFES')
        NI = algo_config.maxFES;
    else
        NI = 60000;
    end
    Pm = 0.005; %%ï¿½ï¿½ï¿½ï¿½Ä¸ï¿½ï¿½ï¿?

    ansr = zeros(HMS, N);%%ï¿½ï¿½ï¿½ï¿½â£¬HMS*Nï¿½ï¿½Ð¡ï¿½Ä¾ï¿½ï¿½ï¿½
    Xmin =  objfunc.Xmin(1);
    Xmax = objfunc.Xmax(1);
	range = [Xmin, Xmax];%%ï¿½ï¿½Öµï¿½ï¿½È¡Öµï¿½ï¿½Î§
    F = zeros(1, HMS);%%ï¿½ï¿½Â¼Ä¿ï¿½êº¯ï¿½ï¿½ï¿½Ð?

    %%ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    for i = 1 : HMS
        for j = 1 : N
            ansr(i, j) = getrand(range(1), range(2));%%ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
        end
        F(i) = objfunc.obj_value( ansr(i, :)');%%ï¿½ï¿½Â¼Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¿ï¿½êº¯ï¿½ï¿½ï¿½Ö?
    end
    [fitval, fitindex] = min(F);
    globalBestValue = fitval(1,1);   
    globalBestSolution = ansr(fitindex(1),:);
    outcome = [HMS globalBestValue];

%     ANSP = zeros(NI, N);%%ï¿½ï¿½Â¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð²ï¿½ï¿½ï¿½ï¿½Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
%     FP = zeros(1, NI);%%ï¿½ï¿½Â¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð²ï¿½ï¿½ï¿½ï¿½Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¿ï¿½êº¯ï¿½ï¿½Öµ

    %% *****************==- Main Loop -==**********************
    for T = 1 : NI
        ans_temp = zeros(1, N);%%ï¿½ï¿½Ê±ï¿½ï¿½Â¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
        %%ï¿½Ò³ï¿½Ä¿Ç°ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ðµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Å½ï¿½
        worst = 1;%%num_i1ï¿½ï¿½Â¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
        best = 1;%%num_i2ï¿½ï¿½Â¼ï¿½ï¿½ï¿½Å½ï¿½ï¿½ï¿½ï¿½ï¿½
        for i = 1 : HMS
            if (F(i) > F(worst))
                worst = i;
            elseif (F(i) < F(best))
                best = i;
            end
        end
%         [v ,worst] = max(F);
%         [v ,best] = min(F);
        %%ï¿½ï¿½ï¿½ï¿½Âµï¿½ï¿½ï¿½ï¿½ï¿?
        for i = 1 : N
            ans_temp(i) = 2* ansr(best , i) - ansr(worst , i);
            if(ans_temp(i) > range(2))
                ans_temp(i) = range(2);
            elseif(ans_temp(i) < range(1))
                ans_temp(i) = range(1);
            end
            r = rand*2;
            
            ans_temp(i) = ansr(worst , i) + rand * ( ans_temp(i) - ansr(worst , i) );%%ï¿½Ú¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Âµï¿½ï¿½ï¿½ï¿½ï¿?
%             ans_temp(i) =  r * ansr(best , i) + (1-r) * ansr(worst , i) ;%%ï¿½Ú¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Âµï¿½ï¿½ï¿½ï¿½ï¿?
%             ans_temp(i) =  rand *2* ansr(best , i) + (1-rand*2) * ansr(worst , i) ;%%ï¿½Ú¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Âµï¿½ï¿½ï¿½ï¿½ï¿?
            posr = rand();
            if (posr < Pm)
                ans_temp(i) = Xmin + rand*(Xmax - Xmin);%%ï¿½Ú¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
            end
        end

        %%ï¿½Ð¶Ï¸ï¿½ï¿½Â¼ï¿½ï¿½ï¿½ï¿?
        F_temp = objfunc.obj_value( ans_temp');%%ï¿½Âµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¿ï¿½êº¯ï¿½ï¿½Öµ
%         if (F_temp < F(worst))
            F(worst) = F_temp;%%Ä¿ï¿½êº¯ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½
            ansr(worst, :) = ans_temp;%%ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
%         end
        
        if globalBestValue > F_temp
            globalBestValue = F_temp;
            globalBestSolution(1,:) = ans_temp;
        end
        if T + HMS >= NI
            T = NI - HMS ;
            break;          % ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
        end
        globalBestValue
        if(mod(T,100) == 0)
            outcome = [outcome ; (T + HMS) globalBestValue];
        end 
%         objfunc.draw_running( ansr' );
   end
    

    % plot3(ANSP(1 : 10 : NI, 1), ANSP(1 : 10 : NI, 2), ANSP(1 : 10 : NI, 3), 'r.', 'markersize', 1);

    %% ****************==- ï¿½ã·¨ï¿½ï¿½ï¿½ï¿½ï¿½Ý´ï¿½ï¿½ï¿½ -==*********************
    best_fvalue = globalBestValue;
    best_solution = globalBestSolution;
    run_series = outcome;
    Altime = cputime - mytime;                  % ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½
    run_info = [Altime];
end
